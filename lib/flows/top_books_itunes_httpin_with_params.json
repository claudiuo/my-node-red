[{"id":"f334cb1e.703818","type":"websocket-listener","path":"/ws/books","wholemsg":"false"},{"id":"4d492169.b2b6e","type":"debug","name":"","active":true,"console":"false","complete":"payload","x":813,"y":204,"z":"3f5f435d.c0a0bc","wires":[]},{"id":"3ccdea11.c33216","type":"http request","name":"Top ebooks JSON","method":"GET","url":"https://itunes.apple.com/us/rss/top{{type}}ebooks/limit={{num}}/{{genre}}/json","x":430,"y":223,"z":"3f5f435d.c0a0bc","wires":[["4359a3d1.bca65c"]]},{"id":"4359a3d1.bca65c","type":"function","name":"Store books details","func":"var payload = [];\nvar content = JSON.parse(msg.payload);\nvar entries = content.feed.entry;\n\nfor (index = 0; index < entries.length; ++index) {\n  var pay = {};\n  var entry = entries[index]\n  pay.title = entry['im:name'].label;\n  pay.author = entry['im:artist'].label;\n  pay.image = entry['im:image'][0].label;\n//  pay.summary = entry['summary'].label;\n  pay.category = entry['category'].attributes.label;\n  payload[index] = pay;\n}\n\n// go through all books and add marker for the ones I like\nvar booksILove = context.global.booksILove;\nfor (index = 0; index < payload.length; ++index) {\n  var book = payload[index];\n  markBookLoved(book);\n}\n\nfunction markBookLoved(book) {\n  booksILove.some(function (e) {\n    // if only title keyword matches, marker is T\n    if (book.title.toLowerCase().indexOf(e.title.toLowerCase()) > -1) {\n      book.marker = 'T';\n      // don't return so we check the author and actual book title\n    }\n    // if only author keyword matches, marker is A\n    // (not exact match so I don't miss collaborations)\n    if (book.author.toLowerCase().indexOf(e.author.toLowerCase()) > -1) {\n      book.marker = 'A';\n      // don't return so we check the actual book title\n    }\n    // if both author and title match, marker is B\n    if (e.title == book.title && e.author == book.author) {\n      book.marker = 'B';\n      return true;\n    }\n  });\n}\n\n// last element in the array is the genre and last update time\nvar details = {};\ndetails.lastUpdate = content.feed.updated.label;\ndetails.genre = msg.topic;\ndetails.type = msg.type;\ndetails.num = msg.num;\npayload.push(details);\n\ncontext.global.books = payload;\n\nmsg.payload = payload;\nreturn msg;","outputs":1,"x":627,"y":287,"z":"3f5f435d.c0a0bc","wires":[["42da9461.bd256c"]]},{"id":"56f844c2.a907bc","type":"http in","name":"","url":"/books/:type/:topic/:genre/:num","method":"get","x":205.5,"y":76,"z":"3f5f435d.c0a0bc","wires":[["6124f04.f9edb1","aaf02af3.550fd8"]]},{"id":"4117affb.bee85","type":"http response","name":"","x":790,"y":124,"z":"3f5f435d.c0a0bc","wires":[]},{"id":"59cf84bc.a6307c","type":"websocket in","name":"","server":"f334cb1e.703818","client":"","x":418,"y":387,"z":"3f5f435d.c0a0bc","wires":[["6e61b6a9.919e48"]]},{"id":"42da9461.bd256c","type":"websocket out","name":"","server":"f334cb1e.703818","client":"","x":845,"y":370,"z":"3f5f435d.c0a0bc","wires":[]},{"id":"6e61b6a9.919e48","type":"function","name":"Get books details","func":"msg.payload = context.global.books;\nreturn msg;","outputs":1,"x":627,"y":383,"z":"3f5f435d.c0a0bc","wires":[["42da9461.bd256c"]]},{"id":"6124f04.f9edb1","type":"template","name":"Live HTML template","field":"payload","template":"<!DOCTYPE html>\n<html>\n<head>\n  <title>Top ebooks on iTunes</title>\n  <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js\"></script>\n\n  <style>\n    .book {color:black;}\n    .author {color:black;}\n    .lovedbook {color:blue; font-weight: bold;}\n    .lovedauthor {color:red; font-weight: bold;}\n    .keyword {color:magenta; font-weight: bold;}\n    .genre {text-decoration: underline;}\n  </style>\n</head>\n<body>\n\n  <table cellspacing=\"20\">\n    <tr>\n    <td id=\"{{req.params.type}}\" valign=\"top\">\n      <h3>Top {{req.params.num}} <span class=\"genre\">{{req.params.type}} {{req.params.topic}}</span> ebooks on iTunes - <span class=\"updated\"></span></h3>\n      <div class=\"text\">\n        <ol class=\"book\"></ol>\n      </div>\n    </td>\n    </tr>\n  </table>\n  \n  <script type=\"text/javascript\">\n    var server = window.location.hostname;\n    var port = window.location.port;\n    var socketaddy = \"ws://\"+server+\":\"+port+\"/ws/books\";\n    console.log(socketaddy);\n    var sock;\n    $(document).ready(function(){\n\n      sock = new WebSocket(socketaddy);\n      sock.addEventListener('open', function(event) { onopen(event); });\n      sock.addEventListener('close', function(event) { onclose(event); });\n      // sock.addEventListener('connecting', function(event) { self.onconnecting(event); });\n      sock.addEventListener('message', function(event) { onmessage(event); });\n      sock.addEventListener('error', function(event) { onerror(event); });\n    });\n\n    function onopen(evt) {\n      console.log(\"Connected websocket\");\n      console.log(\"Sending ping..\");\n      sock.send(\"Ping!\");\n      console.log(\"Ping sent..\");\n    };\n    function onclose(evt) {\n      console.log(\"Websocket closed\"+new Date());\n      // if websocket gets closed for some reason, reopen it\n      sock = new WebSocket(socketaddy);\n      // reattach the handlers\n      sock.addEventListener('open', function(event) { onopen(event); });\n      sock.addEventListener('close', function(event) { onclose(event); });\n      // sock.addEventListener('connecting', function(event) { self.onconnecting(event); });\n      sock.addEventListener('message', function(event) { onmessage(event); });\n      sock.addEventListener('error', function(event) { onerror(event); });\n    };\n    function onerror(evt) {\n      console.log(\"Websocket error\");\n    };\n    function onmessage(evt) {\n      console.log(\"Got a message...\"+new Date());\n\n      var books = JSON.parse(evt.data);\n      if(books == undefined || books.length == 0) {\n        return;\n      }\n//TODO      // last item in array contains genre, type (paid/free) and last updated\n      var details = books[books.length-1];\n      // use type (free/paid) as the destination area to update;\n      var destCell = details.type;\n\n      books.pop();\n      var array = $.map(books, function(el) {\n        return [[el.title, el.author, el.image, el.category, el.marker]];\n      });\n\n      // make sure div is empty: this will update only the div\n      // receiving data now and leave the others untouched to show old data\n      $('#'+destCell+' .text ol').html(\"\");\n      // also update the time\n      $('#'+destCell+' .updated').text(details.lastUpdate);\n\n      jQuery.each( array, function( i, val ) {\n        var classAuthor = \"author\";\n        var classBook = \"book\";\n\n        if(val[4] != 'undefined') {\n          if(val[4] == 'B') {\n            classBook = \"lovedbook\";\n            classAuthor = \"lovedbook\";\n          }\n          if(val[4] == 'A') {\n            classAuthor = \"lovedauthor\";\n          }\n          if(val[4] == 'T') {\n            classBook = \"keyword\";\n          }\n        }\n        var book = \"<li class='\" + classBook + \"'>\" +\n//        \"<img src='\" + val[2] + \"'/>&nbsp;\" +\n        \"<span class='\" + classAuthor + \"'>\" + val[1] + \"</span>\" +\n        \" - \" + val[0] + \" [\"+val[3]+\"]\"\n        \"</li>\";\n        $('#'+destCell+' .text ol').append(book);\n      });\n    };\n  </script>\n</body>\n</html>","x":549,"y":102,"z":"3f5f435d.c0a0bc","wires":[["4117affb.bee85"]]},{"id":"a61a0fae.59e5f","type":"function","name":"Books and authors I like","func":"// save some books in an array to mark them in the list later\n// if the title is * it means I love the author but maybe I don't know the book\n// if the author is * the title is just a keyword\nvar booksILove = [\n  {\"author\": \"Douglas Adams\", \"title\": \"The Hitchhiker's Guide to the Galaxy\"},\n  {\"author\": \"H.G. Wells\", \"title\": \"The Time Machine\"},\n  {\"author\": \"H.G. Wells\", \"title\": \"The Invisible Man\"},\n  {\"author\": \"J. R. R. Tolkien\", \"title\": \"The Hobbit\"},\n  {\"author\": \"Patrick Rothfuss\", \"title\": \"The Name of the Wind\"},\n  {\"author\": \"Patrick Rothfuss\", \"title\": \"The Wise Man's Fear\"},\n  {\"author\": \"Orson Scott Card\", \"title\": \"Ender's Game\"},\n  {\"author\": \"Neil Gaiman\", \"title\": \"Coraline\"},\n  {\"author\": \"Brandon Sanderson\", \"title\": \"Elantris\"},\n  {\"author\": \"*\", \"title\": \"Arduino\"},\n  {\"author\": \"*\", \"title\": \"Raspberry Pi\"},\n  {\"author\": \"*\", \"title\": \"Python\"}\n]\n\ncontext.global.booksILove = booksILove;\n\nmsg.payload = booksILove;\nreturn msg;","outputs":1,"x":441,"y":507,"z":"3f5f435d.c0a0bc","wires":[["7cd77af1.832884"]]},{"id":"7cd77af1.832884","type":"debug","name":"","active":false,"console":"false","complete":"false","x":694,"y":483,"z":"3f5f435d.c0a0bc","wires":[]},{"id":"9c1405b1.63ebf8","type":"inject","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":179,"y":493,"z":"3f5f435d.c0a0bc","wires":[["a61a0fae.59e5f"]]},{"id":"aaf02af3.550fd8","type":"function","name":"params","func":"var req = msg.req;\nmsg = {};\n\nmsg.type = req.params.type;\nmsg.topic = req.params.topic;\nmsg.num = req.params.num;\nmsg.genre = \"genre=\"+req.params.genre;\n\nreturn msg;","outputs":1,"x":175,"y":205,"z":"3f5f435d.c0a0bc","wires":[["3ccdea11.c33216"]]}]