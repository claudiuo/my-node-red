[{"id":"1146c677.2d28ba","type":"serial-port","serialport":"/dev/ttyACM0","serialbaud":"9600","databits":"8","parity":"none","stopbits":"1","newline":"\\n","bin":"false","out":"char","addchar":"false"},{"id":"d7c0e5e6.283f18","type":"debug","name":"","active":false,"complete":false,"x":271,"y":171.9999623298645,"z":"79a4a3ad.865b5c","wires":[]},{"id":"21aa07aa.de55f8","type":"twitter in","twitter":"","tags":"cheerlights","user":"false","name":"cheerlights","topic":"tweets","x":92.00003051757812,"y":171.9999542236328,"z":"79a4a3ad.865b5c","wires":[["2392466a.dc6dba","d7c0e5e6.283f18"]]},{"id":"2392466a.dc6dba","type":"function","name":"parse @Cheerlight colours","func":"// we get here when a new color is set in CheerLights or when inject fires periodically\n// if we get a real color in the message, store it in the context\n// otherwise, this is an inject periodical call, use the last stored color\n\n// just in case there was no color set previously\ncontext.lastColor = context.lastColor || \"green\";\n\nmsg.payload = msg.payload.toLowerCase();\n\nvar result = msg.payload.match(\n/red|green|blue|cyan|white|warmwhite|purple|magenta|yellow|orange|black|pink/g);\n\nif(result == null) {\n  result = [context.lastColor];\n}\n\n//    red (#FF0000)\n//    green (#008000)\n//    blue (#0000FF)\n//    cyan (#00FFFF)\n//    white (#FFFFFF)\n//    warmwhite (#FDF5E6)\n//    purple (#800080)\n//    magenta (#FF00FF)\n//    yellow (#FFFF00)\n//    orange (#FFA500)\n\nconsole.log(result);\n\nmsg = [];\nfor (var colour in result) {\n  context.lastColor = result[colour];\n  msg.push({payload:result[colour],lastColor:context.lastColor});\n}\n// and clear down to black afterwards\nmsg.push({payload:\"black\"});\n\n//console.log(msg);\nreturn [msg];","outputs":1,"x":245.0000457763672,"y":114.99994325637817,"z":"79a4a3ad.865b5c","wires":[["1b585cd.fe4a7a3"]]},{"id":"1b585cd.fe4a7a3","type":"delay","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"2","rateUnits":"minute","randomFirst":"1","randomLast":"5","randomUnits":"seconds","x":441.00006103515625,"y":115.99995803833008,"z":"79a4a3ad.865b5c","wires":[["c5a2759a.3a5d88","a8cecbda.37c82"]]},{"id":"c5a2759a.3a5d88","type":"debug","name":"","active":false,"complete":false,"x":628.0002136230469,"y":57,"z":"79a4a3ad.865b5c","wires":[]},{"id":"a8cecbda.37c82","type":"serial out","name":"","serial":"1146c677.2d28ba","x":633,"y":150,"z":"79a4a3ad.865b5c","wires":[]},{"id":"e85ba4ae.5be0b","type":"inject","name":"periodic check","topic":"","payload":"","payloadType":"none","repeat":"120","crontab":"","once":false,"x":107,"y":40,"z":"79a4a3ad.865b5c","wires":[["2392466a.dc6dba"]]}]