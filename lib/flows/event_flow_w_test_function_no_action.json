[{"id":"3ef3d6df.c10c2a","type":"inject","name":"read next calendar event","topic":"","payload":"","payloadType":"date","repeat":"360","crontab":"","once":true,"x":136.5,"y":80,"z":"ca5f9207.35a07","wires":[["60910177.e97da8"]]},{"id":"c8912856.376ed8","type":"debug","name":"","active":true,"console":false,"complete":false,"x":611,"y":228,"z":"ca5f9207.35a07","wires":[]},{"id":"798a4126.8675c","type":"function","name":"calculate hours till event","func":"// TODO using minutes for testing only\n//var div = 1000*60*60;\t// 1 hour\nvar div = 1000*60;\t// 1 minute\n\nvar eventTime = msg.payload;\n\nvar msgOut = {\n\tpayload:\n\t\t{interval: (eventTime - Date.now())/div,\n\t\t startTime: eventTime }\n\t};\n\nreturn msgOut;","outputs":1,"x":577,"y":80,"z":"ca5f9207.35a07","wires":[["8b362f57.74c9d"]]},{"id":"8b362f57.74c9d","type":"switch","name":"hours till event start","property":"payload.interval","rules":[{"t":"lte","v":6,"v2":0},{"t":"gt","v":6,"v2":0}],"checkall":"true","outputs":2,"x":131,"y":169,"z":"ca5f9207.35a07","wires":[["4632d067.c8042"],["56778e94.f9dcd"]]},{"id":"4632d067.c8042","type":"function","name":"less than 6 hours till event","func":"// save event start time in global context\nvar startTime = msg.payload.startTime;\n\ncontext.global.startTime = startTime;\n\nmsg.payload = \"context startTime set \" +\n\t\t\tMath.round(Math.abs(msg.payload.interval)) +\n\t\t\t\" hour(s) from now\";\nreturn msg;","outputs":1,"x":363.5,"y":140,"z":"ca5f9207.35a07","wires":[["c8912856.376ed8"]]},{"id":"56778e94.f9dcd","type":"function","name":"print future event","func":"msg.payload = \"event \" +\n\t\t\tMath.round(Math.abs(msg.payload.interval)) +\n\t\t\t\" hour(s) in the future\";\n\nreturn msg;","outputs":1,"x":335,"y":200,"z":"ca5f9207.35a07","wires":[["c8912856.376ed8"]]},{"id":"60910177.e97da8","type":"function","name":"fake gcalendar","func":"if(context.startTime == undefined) {\n\t// a few minutes from now\n\tcontext.startTime = Date.now()+19*60*1000;\n}\n\n// subtract 6 minutes each time\nmsg.payload = context.startTime - 6*60*1000;\n\n// if time is now in the past, stop here\nif(msg.payload < Date.now()) {\n\t// start the process again\n\tcontext.startTime = Date.now()+19*60*1000;\n\tmsg.payload = context.startTime - 6*60*1000;\n}\nreturn msg;\n","outputs":1,"x":348,"y":80,"z":"ca5f9207.35a07","wires":[["798a4126.8675c"]]},{"id":"68d3df3b.4f6618","type":"inject","name":"every minute","topic":"","payload":"","payloadType":"date","repeat":"60","crontab":"","once":true,"x":98.5,"y":300,"z":"ca5f9207.35a07","wires":[["27ab78ad.824b58"]]},{"id":"27ab78ad.824b58","type":"function","name":"check event start time","func":"var startTime = context.global.startTime;\nvar currentTime = msg.payload;\n\nif(startTime == undefined) {\n\t// nothing to do\n\t// DEBUG ONLY\n//\tmsg.payload = \"NOTHING TO DO\";\n//\treturn msg;\t\t\n} else {\n\t// check if current time is the same as event start time\n\tif(context.global.isSameMinute(new Date(startTime),\n\t\t\t\t\t\t\tnew Date(currentTime))) {\n\t\tmsg.payload = \"TRUE\"+\"-\"+new Date(startTime)+\"-\"+new Date(currentTime);\n\t\t// remove startTime from context\n\t\tcontext.global.startTime = undefined;\n\t\t// TODO send a message if true\n\t\treturn msg;\t\t\n\t} else {\n\t\tmsg.payload = \"FALSE\"+\"-\"+new Date(startTime)+\"-\"+new Date(currentTime);\n\t\t// TODO REMOVE just for debug\n\t\treturn msg;\t\t\n\t}\n}\n\nreturn null;","outputs":1,"x":353,"y":299,"z":"ca5f9207.35a07","wires":[["c8912856.376ed8"]]},{"id":"30aa88e0.10507","type":"inject","name":"create helper function","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":126.5,"y":340,"z":"ca5f9207.35a07","wires":[["335f98bd.b2a318"]]},{"id":"335f98bd.b2a318","type":"function","name":"isSameMinute","func":"// if dates are the same to the minute return true\n\ncontext.global.isSameMinute = function( date1, date2 ) {\n\tif(date1.getYear() == date2.getYear() &&\n\t\tdate1.getMonth() == date2.getMonth() &&\n\t\tdate1.getDate() == date2.getDate() &&\n\t\tdate1.getHours() == date2.getHours() &&\n\t\tdate1.getMinutes() == date2.getMinutes()) {\n\t\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};","outputs":1,"x":326,"y":340,"z":"ca5f9207.35a07","wires":[[]]},{"id":"73927d22.e6a89c","type":"comment","name":"notes","info":"Purpose: read the next event from a Google calendar\nand trigger an action when the event starts\n\nTODO: use the Sunrise node to trigger different actions\nif event starts before/after sunrise\n========================================================\nTop flow:\n- every 6 hours read the next Google calendar event\nusing my gcalendar node (for testing: instead of gcalendar\nuse a function that gets an event start time a few minutes\nin the future)\n- calculate how many hours till the event (for testing:\nuse minutes instead of hours)\n  - > 6 hours: do nothing, a new read will be\n  triggered in 6 hours\n  - <= 6 hours (including zero hours): set the\n  event start time in the global context\n\nNote: since we are always reading the next event, it should\nalways be in the future so the hours till event should\nnever be negative.\n\nNote: an event may sometimes be missed - if the event was\nmore than 6 hours away at the previous read but it is\nedited between that read and the next one and moved to less\nthan 6 hours from previous read. Since this flow is not\nmission critical this is OK.\n\nNote: If it happens that the event start time is exactly\n6 hours in the future (on the dot), we need to process it\nbecause next read 6 hours from now will not get it again\n(gcalendar doesn't return events in progress which would\nbe the case if the event starts exactly 6 hours from when\nread).\n\nSecond flow:\n- repeat every minute\n- check if the global context contains the expected data\n  - if not: do nothing (there is no event starting in\n  less than 6 hours)\n  - if yes: is the current minute the same as the event\n  start time minute\n    - if not: do nothing (we will check again in a minute)\n    - if yes: clear the global context data (so the next\n    check won't fire again) and send a message to next node\n\n\nThird flow:\n- create a helper function upon startup.","x":67,"y":20,"z":"ca5f9207.35a07","wires":[]}]